22-04-2025


PaaS - Referred to platform as a service, 

NFR - Non Functional Requirement -  refer to the characteristics of a software system that are not related to specific functionality or behavior. They describe how the system should perform, rather than what it should do. 

Example of NFR - Performance, Availability and Reliability, Security , Scalability, Maintainability

-> Strategy is a long term plan while tactics is short term plan to achieve a particular goal.

SaaS - (Software as a Service)
*Key characteristic
->Web based access
-> Centralized hosting 

Benefits of SaaS
-> Lower upfront costs
-> reduced IT overhead
-> faster implementation 
-> automatic updates and maintenance 
-> scalability and flexibility 
-> Accessibility 

Deployment Model
-> Public 
-> Private 
-> Hybrid

Region
-> An Azure region consists of one or more datacenters, connected by a high-capacity, fault-tolerant, low-latency network connection. Azure datacenters are typically located within a large metropolitan area.

Availability zones
-> Many Azure regions provide availability zones. Availability zones are independent sets of datacenters that contain isolated power, cooling, and network connections.


*What is Azure Virtual Network?
-> Azure Virtual Network is a service that provides the fundamental building block for your private network in Azure.

Private IP Addressing: VNets use private IP addresses for internal communication between resources, helping to ensure security.

Communication Between Resources: Resources within the same VNet can communicate with each other using their private IP addresses.

Subnetting: A VNet can be divided into multiple subnets to isolate different resources or to implement different levels of security.

Peering: VNets can be connected to other VNets within the same region or across regions using VNet Peering.

VPN Gateways: You can connect your VNet to on-premises networks through a VPN gateway or an ExpressRoute connection for hybrid cloud scenarios.

Bastion host
-> A bastion host (also known as a jump host or jump server) is a special-purpose server used to provide secure access to private networks or internal infrastructure (like servers, databases, or internal web apps) from an external network (like the public internet). It acts as a gatekeeper, allowing administrators or users to connect to internal systems without exposing those systems directly to the outside world.

What Is a Bastion Host?

-> It's the only point of entry into a secured environment.

-> All traffic to internal servers must pass through the bastion.

-> It's placed in a public subnet (accessible via SSH or RDP), while the internal resources remain in a private subnet (not directly accessible from the internet).

Scale set
-> In Azure, a scale set is a service that allows you to deploy and manage a group of identical, load-balanced virtual machines (VMs). Scale sets enable you to automatically increase or decrease the number of VMs in response to demand or a defined schedule, providing high availability and scalability for your applications.

Steps to connect to Azure VM 

1) Open the azure Cloud shell 

2) Change the permission of file to read-only using chmod 400 key.pem

3) command to connect -> ssh -i key.pem azureuser@<public_ip>
,ssh -i prabhakar-vm01_key.pem azureuser@4.247.27.62

------------------------------------------------------------------------------------------------------------------------------------------------------------

23-04-2025

Vnets are region scoped 

Subnetting

10.0.0.0/24 -> 10.0.0.0 to 10.0.0.255

N/W           1		2	4	8	16	32	64	128	256
HOST   	      256	128	64	32	16	8	4	2	1
Subnet Mask   /24	/25	/26	/27	/28	/29	/30	/31	/32

Total range => 32-24=8 => 2^8=256

		Ip range		Network ID		Bordcast ID		Range

First Range     10.0.0.1-10.0.0.62	10.0.0.0		10.0.0.63		10.0.0.0/26

Second Range	10.0.0.65-10.0.0.126	10.0.0.64		10.0.0.127		10.0.0.64/26

Third Range	10.0.0.129-10.0.0.190	10.0.0.128		10.0.0.191		10.0.0.128/26

------------------------------------------------------------------------------------------------------------------------------------------------------------

24-04-2025

Creating a new User in Azure
-> Go to Microsoft Entra ID -> manage -> users -> Create new User


Assign a predefined Azure role (like Owner, Contributor, Reader, etc.) to a user or group, giving them specific permissions to manage or access resources within the selected subscription
-> Subscription -> MML ->Access Control (IAM) -> Add role Assignment 


Changing Quota
Quota -> Settings -> My Quota
Click on resources for which we need to increase the quota -> New Quota Request -> Enter a new limit -> Submit

Benefits of Public Cloud
->cost efficiency 
-> scalability and flexibility
-> global reach 
-> focus on core business
-> Sustainability 

Challenges of Public Cloud 
-> security concerns 
-> vendor lock-in 


az vm create \

 --resource-group <resource_group_name> \

 --name <vm_name> \

 --location <location> \

 --image <vm_image> \

 --vnet-name <vnet_name> \

 --subnet <subnet_name> \

 --admin-username <admin_username> \

 --admin-password <admin_password>

------------------------------------------------------------------------------------------------------------------------------------------------------------

25-04-2025

Tenants- the highest level of the Azure hierarchy and represents an instance of Azure Active Directory (Azure AD). It’s your organization's identity directory and serves as the root for managing users, groups, and all identities within Azure.
|
Management Groups- A Management Group is a container that can hold multiple Azure subscriptions. It allows you to manage access, policies, and compliance across multiple subscriptions.
|
Subscription is a logical container that holds Azure resources. It’s tied to a billing account and defines the resources available for use.
|
Resource Group is a container that holds related Azure resources
|
Resources are the individual services


Role is assigned to the identity 
->identity 
	->Users
	->Groups
	->Service Principle (gives access to certain services)

->Scope is from Management Group to Resources .

ACID 
Atomicity - ensures that a transaction is treated as a single, indivisible unit of work.
Consistency - ensures that a transaction takes the database from one consistent state to another consistent state.
Isolation - ensures that multiple transactions can execute concurrently without interfering with each other. 
Durability - ensures that once a transaction is committed, its changes are permanent and will survive any subsequent system failures.

1. az login
Description: Logs you into Azure, allowing you to authenticate your session.

2. az --version
Description: Displays the version of the Azure CLI installed on your machine.

3. az account list
Description: Lists all the Azure subscriptions associated with your account.

4. az account list --output table
Description: Lists all Azure subscriptions, outputted in a table format.

5. az config set defaults.location="East US 2"
Description: Sets the default location for future Azure CLI commands to "East US 2".

6. az group create --name prab-RG --location "East US 2"
Description: Creates a new resource group named prab-RG in the "East US 2" region.

7. az config set defaults.group="prab-RG"
Description: Sets the default resource group to prab-RG for future commands.

8. az account list
Description: Lists all Azure subscriptions associated with your account (similar to Command #3).

9. az account set --subscription "bf7e75db-e819-49ca-b6d2-69c32a2353fe"
Description: Sets the current active subscription to the specified subscription ID.

10. az group list
Description: Lists all resource groups in the current subscription.

11. az group list --help
Description: Displays help information for the az group list command.

12. az group list --query "[?location='East US 2']"
Description: Lists resource groups in the "East US 2" region using a query filter.

13. az group list --query "[?location=='East US 2']"
Description: Similar to Command #12 but with different query syntax, which checks for the exact match of location.

14. az group list --query "[?location=='East US 2']"
Description: Same as #12, but uses double equal signs == for strict equality in the query.

15. az group list --query "[?location=='eastus2']"
Description: Lists resource groups in the "eastus2" region, considering case sensitivity.

16. az group list
Description: Lists all resource groups in the current subscription.

17. az group list --query "[?name=='prab-RG']"
Description: Filters the resource groups to only show the one named prab-RG.

18. az group list --query "[?name]"
Description: Lists resource groups, showing only those with a name field.

19. az group list "[].name" --output tsv
Description: Lists the names of all resource groups and outputs them in Tab-Separated Values (TSV) format.

20. az group list --query "[].name" --output tsv
Description: Same as #19, but explicitly uses a query to show only resource group names in TSV format.

21. az group list
Description: Lists all resource groups in the current subscription (similar to Command #16).

22. az group list | grep "prab"
Description: Lists all resource groups and then filters the results using grep to show those containing "prab".

23. az group list | grep -i name
Description: Lists all resource groups and filters by case-insensitive matching of "name".

24. az VM list | grep -i name
Description: Lists all VMs and filters by case-insensitive matching of the name.

25. az vm list
Description: Lists all virtual machines in the current subscription.

26. az vm list
Description: Same as #25, lists all virtual machines in the current subscription.

27. az config get defaults
Description: Retrieves the current default configurations for Azure CLI.

28. az config get defaults
Description: Same as Command #27, retrieves default configuration settings.

29. az config get default
Description: Retrieves the current default configuration settings.

30. az vm list
Description: Same as #25, lists all virtual machines in the current subscription.

31. az show config
Description: Displays the current configuration settings for Azure CLI.

32. az show config get defaults
Description: Retrieves default configuration values for Azure CLI.

33. az config get defaults
Description: Same as Command #27, retrieves default configuration settings.

34. az config get default
Description: Retrieves the default configuration setting.

35. az vm list -g Admin-Azure
Description: Lists all virtual machines in the resource group Admin-Azure.

36. az vm list -g Admin-Azure | grep -i name
Description: Lists all VMs in the Admin-Azure resource group and filters the results by the name, case-insensitively.

37. az vm list -g Admin-Azure | grep "name"
Description: Lists all VMs in the Admin-Azure resource group and filters by the word "name".

38. az vm list -g Admin-Azure --query "[].name" --output tsv
Description: Lists all VMs in the Admin-Azure resource group, showing only their names in TSV format.

39. az vm list -g Admin-Azure --query "[].Name:name" --output tsv
Description: Lists VMs in Admin-Azure, outputting the name property as name in TSV format.

40. az vm list -g Admin-Azure --query "[].{Name:name}" --output tsv
Description: Lists VMs in Admin-Azure, outputs the Name field as name in TSV format.

41. az vm list -g Admin-Azure --query "[].{Name}:{name}" --output tsv
Description: Lists VMs in Admin-Azure, formats output with "Name" as the label and the actual name in TSV format.

42. az vm list -g Admin-Azure --query "[].{Name:name}" --output tsv
Description: Same as Command #40, lists VM names in Admin-Azure resource group in TSV format.

43. az vm list -g Admin-Azure --query "[].{Name:name,group}" --output tsv
Description: Lists VMs in Admin-Azure, showing both the name and group information in TSV format.

44. az vm list -g Admin-Azure --query "[].{Name:name,RG}" --output tsv
Description: Lists VMs in Admin-Azure, showing both the name and resource group as RG in TSV format.

45. az vm list -g Admin-Azure --query "[].{Name:name,ResourceGroup:resourcegroup}" --output tsv
Description: Lists VMs in Admin-Azure, showing both name and resource group, with the resource group labeled as ResourceGroup in TSV format.

46. az vm list -g Admin-Azure --query "[].{Name:name,ResourceGroup:resourceGroup}" --output tsv
Description: Same as Command #45, but uses a capitalized version for resourceGroup.

47. az vm list -g Admin-Azure --query "[].{name,resourceGroup}" --output tsv
Description: Lists VMs in Admin-Azure, showing both the name and resource group fields in TSV format.

48. az vm list -g Admin-Azure --query "[].{Name:name,ResourceGroup:resourceGroup}" --output tsv
Description: Same as Command #46, but provides the name and resource group in a formatted TSV output.

49. az storage account list
Description: Lists all storage accounts in the current subscription.

--------------------------------------------------------------------------------------------------------------------------------------------------

26-04-2025

Managed Identities in Azure are a way to securely authenticate your applications or services (like a runbook, virtual machine, or Azure app) to access other Azure resources without needing to store any credentials (like username/password or secrets).

Two Types of Managed Identities:

->System-assigned Managed Identity: This identity is tied to the lifecycle of a specific Azure resource. When the resource is deleted, the managed identity is also automatically deleted.

->User-assigned Managed Identity: This identity is separate from the lifecycle of any specific resource. It can be assigned to multiple resources and managed independently.

---------------------------------------------------------------------------------------------------------------------------------------------------

27-04-2025

IaC -Infrastructure as Code

It is used for :
-> Consistency 
-> Speed
-> Automation 
-> Reusability 
-> Scalability 
-> Version Control 

Three forms of IaC

1) configuration management tools 
-> puppet
-> chef
-> Ansible 

2) server templating -> vagrant and docker 

3) Infrastructure Provisioning Tools
-> Azure( ARM Template , BICEP)
-> Terraform (Multi-cloud)
-> AWS (Boto, cloud formation)

-> HashiCorp Configuration Language (HCL) is the configuration language used in Terraform to define infrastructure as code.

-> .terraform folder has all modules associated with provider.
->The lock file in Terraform(.terraform.lock.hcl) is used to ensure that the exact versions of providers used in your Terraform configuration are locked down and consistent across different environments and machines.

-> terraform plan:The terraform plan command is used in Terraform to create an execution plan, which shows what actions Terraform will take to change your infrastructure based on the current state and the desired state defined in your Terraform configuration files.

+: A resource will be created.

-: A resource will be destroyed.

~: A resource will be modified (updated).

-> Use -out Flag to Save the Plan: You can save the plan to a file and apply it later:

terraform plan -out=tfplan
terraform apply tfplan

main.tf - what we want to now do 
.tf state file - last time what was done 
azure cloud - Whatever we did directly in cloud 

Terraform compares between all the three 

-> terraform fmt: format 
-> terraform destroy 
-> terraform validate: to see the validation of format






